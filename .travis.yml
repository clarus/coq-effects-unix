dist: trusty
sudo: required
language: generic

services:
  - docker

env:
  global:
  - OPAMJOBS="2"
  matrix:
  - COQ_IMAGE="coqorg/coq:8.5"
  - COQ_IMAGE="coqorg/coq:8.6"
  - COQ_IMAGE="coqorg/coq:8.7"
  - COQ_IMAGE="coqorg/coq:8.8"
  - COQ_IMAGE="coqorg/coq:8.9"

install: |
  # Prepare the COQ container
  docker pull ${COQ_IMAGE}
  docker run -d -i --init --name=COQ -v ${TRAVIS_BUILD_DIR}:/home/project -w /home/project ${COQ_IMAGE}
  docker exec COQ /bin/bash --login -c "
    # This bash script is double-quoted to interpolate Travis CI env vars:
    echo \"Build triggered by ${TRAVIS_EVENT_TYPE}\"
    export PS4='+ \e[33;1m(\$0 @ line \$LINENO) \$\e[0m '
    set -ex  # -e = exit on failure; -x = trace for debug
    if [ -n \"\${COMPILER_EDGE}\" ]; then opam switch \${COMPILER_EDGE}; eval \$(opam env); fi
    opam update -y
    opam pin add coq-io-system.opam . --kind=path -y --no-action
    opam pin add ocaml/coq-io-system-ocaml.opam . --kind=path -y --no-action
    opam install coq-io-system --deps-only -y --ignore-constraints-on=coq-io-system-ocaml
    opam config list
    opam repo list
    opam pin list
    opam list
    " install

script:
- echo -e "${ANSI_YELLOW}Building...${ANSI_RESET}" && echo -en 'travis_fold:start:script\\r'
- |
  docker exec COQ /bin/bash --login -c "
    export PS4='+ \e[33;1m(\$0 @ line \$LINENO) \$\e[0m '
    set -ex
    sudo chown -R coq:coq /home/project
    opam install coq-io-system -v --ignore-constraints-on=coq-io-system-ocaml
    " script
- docker stop COQ  # optional
- echo -en 'travis_fold:end:script\\r'
